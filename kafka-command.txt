###launch a zookeeper-server###

bin/zookeeper-server-start.sh config/zookeeper.properties

###launch a kafka server###
bin/kafka-server-start.sh config/server.properties


###Create a topic with partitions and replication factor in a broker###

kafka-topics.sh --zookeeper 127.0.0.1:2181 --topic first_topic --create --partitions 3 --replication-factor 1


###To get a list of topics###

kafka-topics.sh --zookeeper 127.0.0.1:2181 --list 

###to get informations about a topic###

kafka-topics.sh --zookeeper 127.0.0.1:2181 --topic first_topic --describe


###marke a topic for deletion###

kafka-topics.sh --zookeeper 127.0.0.1:2181 --topic second_topic --delete

###connect my producer with a topic###

kafka-console-producer.sh --broker-list 127.0.0.1:9092 --topic first_topic

###Add property to my producer acknoledge###

kafka-console-producer.sh --broker-list 127.0.0.1:9092 --topic first_topic --producer-property acks=all

### create a consumer to my topic###

kafka-console-consumer.sh --bootstrap-server 127.0.0.1:9092 --topic first_topic

### consumer from begining###

kafka-console-consumer.sh --bootstrap-server 127.0.0.1:9092 --topic first_topic --from-beginning


###To launch consumer with group###

kafka-console-consumer.sh --bootstrap-server 127.0.0.1:9092 --topic first_topic --group my-first-application

###Get the list of Consumer groups###

kafka-consumer-groups.sh --bootstrap-server 127.0.0.1:9092 --list

###Describe a specific group###

kafka-consumer-groups.sh --bootstrap-server 127.0.0.1:9092 --describe --group my-second-application

###Reset offsets###

kafka-consumer-groups.sh --bootstrap-server 127.0.0.1:9092 --group my-first-application --reset-offsets --to-earliest --execute --topic first_topic


####Producer with keys####

kafka-console-producer --broker-list 127.0.0.1:9092 --topic first_topic --property parse.key=true --property key.separator=,
> key,value
> another key,another value

####Consumer with keys####

kafka-console-consumer --bootstrap-server 127.0.0.1:9092 --topic first_topic --from-beginning --property print.key=true --property key.separator=,

### Kafka configs ###

kafka-configs.sh --zookeeper 127.0.0.1:2181 --entity-type topics --entity-name first_topic --describe

### add configs to a topic ###

kafka-configs.sh --zookeeper 127.0.0.1:2181 --entity-type topics --entity-name first_topic --add-config min.insync.replicas=2 --alter













